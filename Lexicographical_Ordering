package com.afklm.bre.factmodel.checkoutv2;

import java.util.HashMap;
import java.util.Map;
import java.util.Stack;

public class Check2 {

    public static void main(String[] args) {
        Check2 check2 = new Check2();
        System.out.println(check2.sort("cbdcdbbacbd"));
    }

    private String sort(String input) {
        Map<Character, Integer> frequency = getFrequency(input);
        Map<Character, Boolean> visited = new HashMap<>();
        Stack<Character> filter = new Stack<>();

        for(int i = 0; i < input.length(); i++) {
            Character currentChar = input.charAt(i);
            if(filter.isEmpty()) {
                filter.push(currentChar);
                visited.put(currentChar, true);
                frequency.put(currentChar, frequency.get(currentChar) - 1);
            }
            else if(!visited.containsKey(currentChar)) {
                while(!filter.isEmpty()) {
                    if(currentChar < filter.peek() && frequency.get(filter.peek()) > 0) {
                        Character poppedElement = filter.pop();
                        visited.remove(poppedElement);
                    }
                    else if(currentChar > filter.peek() || frequency.get(filter.peek()) == 0) {
                        break;
                    }
                }
                filter.push(currentChar);
                frequency.put(currentChar, frequency.get(currentChar) - 1);
                visited.put(currentChar, true);
            }
        }
        return formResult(filter);
    }

    private String formResult(Stack<Character> filter) {
        StringBuilder result = new StringBuilder();
        while(!filter.isEmpty()) {
            Character poppedElement = filter.pop();
            result.insert(0, poppedElement);
        }
        return result.toString();
    }

    private Map<Character, Integer> getFrequency(String input) {
        Map<Character, Integer> frequency = new HashMap<>();
        for(int i = 0; i < input.length(); i++) {
            if(frequency.containsKey(input.charAt(i))) {
                frequency.put(input.charAt(i), frequency.get(input.charAt(i)) + 1);
            }
            else {
                frequency.put(input.charAt(i), 1);
            }
        }
        return frequency;
    }

}
